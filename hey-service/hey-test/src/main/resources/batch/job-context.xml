<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:int="http://www.springframework.org/schema/integration" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/integration/jms 
        http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
        http://www.springframework.org/schema/integration 
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms.xsd">

	<!-- 定义消息网关，负责向requests队列发送消息，从replies队列收取消息 -->
	<bean id="messageingGateway" class="org.springframework.integration.core.MessagingTemplate">
		<property name="defaultChannel" ref="requests" />
		<property name="receiveTimeout" value="1000" />
	</bean>

	<!-- 定义请求队列requests的adapter -->
	<int-jms:outbound-channel-adapter connection-factory="connectionFactory" channel="requests"
		destination-name="requests" />

	<!-- 定义使用的通道 -->
	<int:channel id="requests" />
	<int:channel id="incoming" />

	<!-- 定义消息转化器 -->
	<int:transformer input-channel="incoming" output-channel="replies" ref="headerExtractor" method="extract" />

	<!-- 定义响应的通道 -->
	<int:channel id="replies" scope="thread">
		<int:queue />
		<int:interceptors>
			<bean id="pollerInterceptor" class="org.springframework.batch.integration.chunk.MessageSourcePollerInterceptor">
				<property name="messageSource">
					<bean class="org.springframework.integration.jms.JmsDestinationPollingSource">
						<constructor-arg>
							<bean class="org.springframework.jms.core.JmsTemplate">
								<property name="connectionFactory" ref="connectionFactory" />
								<property name="defaultDestinationName" value="replies" />
								<property name="receiveTimeout" value="100" />
							</bean>
						</constructor-arg>
					</bean>
				</property>
				<property name="channel" ref="incoming" />
			</bean>
		</int:interceptors>
	</int:channel>

	<!-- 定义使用的JMS消息模版jmsTempate -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="receiveTimeout" value="100" />
		<property name="sessionTransacted" value="true" />
	</bean>

	<!-- 定义了使用AMQ服务器 -->
	<amq:broker useJmx="false" persistent="false" schedulerSupport="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:61616" />
		</amq:transportConnectors>
	</amq:broker>
	<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616" />

	<!-- 定义了chunkWriter，chunkWriter负责将本地Step中的读取数据通过messagingGateway发送远程Step中；ChunkMessageChannelItemWriter是一个StepExecutionListener类型的拦截器 -->
	<bean id="chunkWriter" scope="step" class="org.springframework.batch.integration.chunk.ChunkMessageChannelItemWriter">
		<property name="messageingOperations" value="messagingGateway" />
		<property name="replyChannel" ref="replies" />
		<property name="maxWaitTimeouts" value="10" />
	</bean>

	<!-- RemoteChunkHandlerFactoryBean在创建chunkHandler过程中，默认注册了ChunkProcessor,与chunkWriter完成了工作的传递 -->
	<bean id="chunkHandler" class="org.springframework.batch.integration.chunk.RemoteChunkHandlerFactoryBean">
		<property name="chunkWriter" ref="chunkWriter" />
		<!-- 定义远程拦截器调用使用的作业为stepRemoteChunk -->
		<property name="step" ref="stepRemoteChunk" />
	</bean>

	<!-- 配置请求队列的监听器与处理逻辑，处理逻辑调用chunkHandler的handleChunk操作；该操作接受chunk请求，并负责处理逻辑 -->
	<jms:listener-container connection-factory="connectionFactory" transaction-manager="transactionManager" acknowledge="transacted"
		concurrency="1">
		<!-- 定义监听的队列为requests，监听到消息后处理逻辑为chunkHandler的handleChunk操作，处理后的消息发送到replies队列 -->
		<jms:listener destination="requests" response-destination="replies" ref="chunkHandler" method="handleChunk" />
	</jms:listener-container>

	<batch:job id="remoteChunkJob">
		<batch:step id="stepRemoteChunk">
			<batch:tasklet>
				<batch:chunk reader="jdbcItemPageReader" writer="jdbcItemWriter" commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
</beans>